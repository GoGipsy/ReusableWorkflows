name: Build and Publish
on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        default: "us-east-1"
        type: string
      base-name:
        required: true
        type: string
      dockerfile-name:
        required: true
        default: "Dockerfile"
        type: string
      build-artifact-name:
        required: true
        default: "build"
        type: string
      repository-sufix:
        required: false
        default: ""
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
    outputs:
      image:
        description: "Container Image"
        value: ${{ jobs.build-and-publish.outputs.image }}
      repository:
        description: "Container Repository"
        value: ${{ jobs.build-and-publish.outputs.repository }}
      registry: 
        description: "Container Registry"
        value: ${{ jobs.build-and-publish.outputs.registry }}
      

jobs:
  build-and-publish-amd64:
    runs-on: ubuntu-24.04
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      regitry: ${{ steps.login-ecr.outputs.registry }}
      repository: ${{ inputs.base-name }}${{ inputs.repository-sufix }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'GoGipsy/ReusableWorkflows'
    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.build-artifact-name }}
    - name: Configure AWS credentials
      id: aws-account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with: 
        mask-password: true
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.base-name }}${{ inputs.repository-sufix }}
        flavor: latest=false
        tags: | 
          type=sha,enable=true,priority=100,prefix=,suffix=-amd64,format=long

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
      with:
        context: ./
        platforms: linux/amd64
        build-args: GITHUB_TOKEN=${{ steps.generate_token.outputs.token }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-to: type=gha,mode=max
        cache-from: type=gha
        


  build-and-publish-arm64:
    runs-on: ubuntu-24-arm64
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      regitry: ${{ steps.login-ecr.outputs.registry }}
      repository: ${{ inputs.base-name }}${{ inputs.repository-sufix }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'GoGipsy/ReusableWorkflows'
    - uses: actions/download-artifact@v4
      with:
        name: ${{ inputs.build-artifact-name }}
    - name: Configure AWS credentials
      id: aws-account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with: 
        mask-password: true
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.base-name }}${{ inputs.repository-sufix }}
        flavor: latest=false
        tags: | 
          type=sha,enable=true,priority=100,prefix=,suffix=-arm64,format=long

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v6
      env:
        AWS_REGION: ${{ inputs.aws-region }}
        AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
      with:
        context: ./
        platforms: linux/arm64
        build-args: GITHUB_TOKEN=${{ steps.generate_token.outputs.token }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-to: type=gha,mode=max
        cache-from: type=gha


  build-and-publish-artifact:
    runs-on: ubuntu-24.04
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      regitry: ${{ steps.login-ecr.outputs.registry }}
      repository: ${{ inputs.base-name }}${{ inputs.repository-sufix }}
    steps:
    - uses: actions/checkout@v4
      with:
        repository: 'GoGipsy/ReusableWorkflows'
    - name: Configure AWS credentials
      id: aws-account
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with: 
        mask-password: true
      
    - name: Build, tag, and push image to Amazon ECR
      id: build-artifact
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ inputs.base-name }}${{ inputs.repository-sufix }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker manifest create -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG-amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -arm64
        docker manifest push ${ECR}:${VERSION}
        echo "image=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "repository=$ECR_REPOSITORY" >> $GITHUB_OUTPUT
        echo "registry=$ECR_REGISTRY" >> $GITHUB_OUTPUT
  
  
        
        

  
  
