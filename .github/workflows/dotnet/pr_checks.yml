name: Build and Coverage

on:
  workflow_dispatch:
  push:
    branches: [ "main", "master", "stage", "dev", "release/*"]
  pull_request:
    branches: [ "main", "master", "stage", "dev", "release/*" ]
    
env:
  DOTNET_VERSION: 7.0.x
  COVERAGE_THRESHOLD: ${{vars.COVERAGE_THRESHOLD}}
      
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore

    - name: Format
      run: dotnet format --verify-no-changes
      
    - name: Test
      run: dotnet test -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover --no-build --verbosity normal test/TestProject1
      
    - name: Create test coverage badge
      uses: simon-k/dotnet-code-coverage-badge@v1.0.0
      id: create_coverage_badge
      with:
        label: Unit Test Coverage
        color: brightgreen
        path: test/TestProject1/TestResults/coverage.opencover.xml
        gist-filename: code-coverage.json
        gist-id: 7f68482ee34cdce81dffbbdd6b88f5ac
        gist-auth-token: ${{ secrets.GIST_AUTH_TOKEN }}  

    - name: Report results to DeepSource
      run: |
       curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key csharp --value-file ./test/TestProject1/TestResults/coverage.opencover.xml
      env:
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}
        
    - name: Coverage threshold
      if: ${{ steps.create_coverage_badge.outputs.percentage < env.COVERAGE_THRESHOLD}}
      run: |
        echo "::error title="Coverage threshold"::Coverage is below threshold. Expected ${{env.COVERAGE_THRESHOLD}}%, got ${{steps.create_coverage_badge.outputs.percentage}}%"
        exit 1
        
    
