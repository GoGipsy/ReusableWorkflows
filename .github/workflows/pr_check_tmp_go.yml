name: Pull Request Checks

on:
  workflow_call:
    inputs:
      coverage-threshold:
        type: number
        description: "The minimum coverage threshold. Below this, the workflow will fail."
        required: false
        default: 90
      go-version:
        type: string
        description: "Go version. Default is 1.21."
        required: false   
        default: "1.21"
      go-lint-version:
        type: string
        description: "Go lint version. Default is v1.55.2"
        required: false
        default: "v1.55.2"
      runs-on:
        type: string
        description: "Runner to use. Always try to use self-hosted runners."
        required: false
        default: ubuntu-latest
      enviroments-file-path:
        type: string
        description: "Environment variable file. Default value is .env.testing"
        required: false
        default: .env.testing
    secrets:
      deepsource-dns:
        description: "DeepSource DSN of this repository"
        required: true
      app-id:
        required: true
      private-key: 
        required: true 
      

jobs:
  build:
    uses: GoGipsy/ReusableWorkflows/.github/workflows/pr_check_build_tmp_go.yml@master
    with:
      runs-on: ${{ inputs.runs-on }}
      go-version: ${{ inputs.go-version }}
    secrets:
      app-id: ${{ secrets.app-id }}
      private-key: ${{ secrets.private-key }}

  lint:
    needs: build
    uses: GoGipsy/ReusableWorkflows/.github/workflows/pr_check_lint_tmp_go.yml@master
    with:
      runs-on: ${{ inputs.runs-on }}
      go-version: ${{ inputs.go-version }}
      go-lint-version: ${{ inputs.go-lint-version }}
    secrets:
      app-id: ${{ secrets.app-id }}
      private-key: ${{ secrets.private-key }}

  test:
    uses: GoGipsy/ReusableWorkflows/.github/workflows/pr_check_test_go.yml@master
    with:
      runs-on: ${{ inputs.runs-on }}
      go-version: ${{ inputs.go-version }}
      coverage-threshold: ${{ inputs.coverage-threshold }}
    secrets:
      app-id: ${{ secrets.app-id }}
      private-key: ${{ secrets.private-key }}
      deepsource-dns: ${{ secrets.deepsource-dns }}
