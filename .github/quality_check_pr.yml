name: Quality Checks Pull Request

on:
  pull_request:
    branches:
      - master
      - stage
    types: [opened, edited, reopened, synchronize]
  input:
    coverage_threshold:
      description: "The minimum coverage percentage required"
      required: true
      default: 80

jobs:
  # Run unit tests
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Run unit tests
        run: dotnet test --no-restore --verbosity normal --configuration Release --no-build --filter TestCategory!=Integration
      - name: Generate coverage report
        run: dotnet test --no-restore --verbosity normal --configuration Release --no-build --collect:"XPlat Code Coverage"
      - name: Check coverage threshold
        run: |
          coverage_threshold=${{ github.event.inputs.coverage_threshold }}
          coverage=$(grep -oP '(?<=<Summary>).*?(?=<\/Summary>)' coverage.cobertura.xml | grep -oP '(?<=line-rate=").*?(?=")')
          if (( $(echo "$coverage < $coverage_threshold" | bc -l) )); then
            echo "Coverage is below threshold ($coverage < $coverage_threshold)"
            exit 1
          fi

  run-sonarqube-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 0
      # Setup java 17 to be default (sonar-scanner requirement as of 5.x)
      - uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
      # Setup sonar-scanner
      - name: Setup SonarQube
        uses: warchant/setup-sonar-scanner@v7
      # Run sonar-scanner
      - name: SonarQube Scan
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
          -Dsonar.pullrequest.base=${{ github.BASE_REF }}
          -Dsonar.pullrequest.github.repository=${{ github.repository }}
          -Dsonar.scm.provider=git
          -Dsonar.java.binaries=/tmp
