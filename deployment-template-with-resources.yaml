apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: gds-{{kind}}-{{baseName}}-{{environment}}
  name: gds-{{kind}}-{{baseName}}-{{environment}}
  namespace: {{environment}}
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: gds-{{kind}}-{{baseName}}-{{environment}}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: gds-{{kind}}-{{baseName}}-{{environment}}
    spec:
      tolerations:
      - key: "worker"
        operator: "Equal"
        value: "worker-group-spot-3"
        effect: "NoSchedule"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: worker
                operator: In
                values:
                - "worker-group-spot-3"      
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - gds-{{kind}}-{{baseName}}-{{environment}}
            topologyKey: kubernetes.io/hostname
      containers:
      - image: 809853256122.dkr.ecr.{{aws-region}}.amazonaws.com/gds-{{kind}}-{{baseName}}{{repository-sufix}}:{{apiImageTag}}
        imagePullPolicy: IfNotPresent
        name: gds-{{kind}}-{{baseName}}-{{environment}}
        ports:
        - containerPort: 80
          protocol: TCP
        resources:
          limits:
            cpu: 4
            memory: 60Gi
          requests:
            cpu: 0.5
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /App/appsettings.json
          name: appsettings-volume
          subPath: appsettings.json
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: appsettings.json
            path: appsettings.json
          name: gds-{{kind}}-{{baseName}}-{{environment}}-appsettings
        name: appsettings-volume
